import com.indramahkota.buildSrc.Libs

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdk project.ext.compileSdk

    defaultConfig {
        applicationId "com.indramahkota.app"
        minSdk project.ext.minSdk
        targetSdk project.ext.targetSdk
        versionCode project.ext.versionCode
        versionName project.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "CERT1", '"sha256/oD/WAoRPvbez1Y2dfYfuo4yujAcYHXdv1Ivb2v2MOKk="')
        buildConfigField("String", "CERT2", '"sha256/JSMzqOOrtyOT1kmau6zKhgT676hGgczD5VMdRMyJZFA="')
        buildConfigField("String", "CERT3", '"sha256/++MBgDH5WGvL9Bcn5Be30cRcL0f5O+NyoXuWtQdX1aI="')
        buildConfigField("String", "CERT4", '"sha256/KwccWaCgrnaw6tsrrSO61FgLacNgG2MMLq8GE6+oP5I="')
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    dynamicFeatures = [':favorite']
}

kapt {
    arguments {
        // Make Hilt share the same definition of Components in tests instead of
        // creating a new set of Components per test class.
        arg("dagger.hilt.shareTestComponents", "true")
    }
}

dependencies {
    implementation project(":common")
    implementation project(":data")
    implementation project(":domain")

    // Hilt
    implementation Libs.Dagger.hiltAndroid
    kapt Libs.Dagger.hiltAndroidCompiler

    // KTX
    implementation Libs.AndroidX.Fragment.fragmentKtx
    implementation Libs.AndroidX.Activity.activityKtx

    // Lifecycle ktx
    implementation Libs.AndroidX.Lifecycle.runtime
    implementation Libs.AndroidX.Lifecycle.viewmodel
    implementation Libs.AndroidX.Lifecycle.liveData

    // Hilt Lifecycle
    implementation Libs.Dagger.hiltLifecycleViewModel

    // Glide
    implementation Libs.Glide.glide
    annotationProcessor Libs.Glide.compiler

    // Shimmer
    implementation Libs.Shimmer.shimmer

    // Test
    testImplementation Libs.JUnit.junit
    androidTestImplementation Libs.AndroidX.Test.core
    androidTestImplementation Libs.AndroidX.Test.rules
    androidTestImplementation Libs.AndroidX.Test.Ext.junit
    androidTestImplementation Libs.AndroidX.Test.espressoCore

    // LeakCanary
    debugImplementation Libs.LeakCanary.leakcanary
}